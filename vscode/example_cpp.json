{
    "Codeforces cp template": {
        "prefix": "weapon",
        "body": [
            "#include <bits/stdc++.h>",
            "using namespace std;",
            "",
            "#define FAST_IO ios_base::sync_with_stdio(0), cin.tie(0);",
            "#define bitcount __builtin_popcount",
            "#define countZeros __builtin_ctz",
            "typedef long long ll;",
            "typedef pair<int,int> ii;",
            "typedef priority_queue<int, vector<int>, less<int>> maxHeap;",
            "typedef priority_queue<int, vector<int>, greater<int>> minHeap;",
            "",
            "const int INF= 987654321;",
            "",
            "$0",
            "",
            "void solve() {",
            "    ",
            "}",
            "",
            "int main() {",
            "    FAST_IO;",
            "    int t; cin >> t;",
            "    while (t--) solve();",
            "}"
        ],
        "description": "CP template for codeforces ace."
    },
    "Modular operation utility functions": {
        "prefix": "modops",
        "body": [
            "const int MOD = 1e9 + 7;",
            "",
            "inline int _mul(int a, int b) {",
            "    ll ret = a * 1ll * b;",
            "    ret %= MOD;",
            "    return int(ret);",
            "}",
            "",
            "inline int _add(int a, int b) {",
            "    ll ret = a + b;",
            "    while (ret >= MOD) ret -= MOD;",
            "    while (ret < 0) ret += MOD;",
            "    return int(ret);",
            "}",
            "",
            "inline int _binPow(int x, int n) {",
            "    int ret = 1;",
            "    int d = x;",
            "    while (n) {",
            "        if (n & 1) {",
            "            ret = _mul(ret, d);",
            "        }",
            "        d = _mul(d, d);",
            "        n >>= 1;",
            "    }",
            "    return ret;",
            "}",
            "",
            "inline int _inv(int a) {",
            "    return _binPow(a, MOD - 2);",
            "}",
            "",
            "inline int _div(int a, int b) {",
            "    return _mul(a, _inv(b));",
            "}"
        ],
        "description": "Modular operation utility functions."
    }
}